; Begin
	R0L EQU 0xC
	R0H EQU 0xD
	R1L EQU 0xE
	R1H EQU 0xF
	R2L EQU 0x10
	R2H EQU 0x11
	R3L EQU 0x12
	R3H EQU 0x13
	R4L EQU 0x14
	R4H EQU 0x15
	R5L EQU 0x16
	R5H EQU 0x17
	SO_PORT EQU 0x18
	SO_BIT EQU 0x19
	SO_INTL EQU 0x1A
	SO_INTH EQU 0x1B
	ORG 0x0000
	BCF PCLATH,3
	BCF PCLATH,4
	GOTO L0002
	ORG 0x0004
	RETFIE
L0002:
; 1: Define SEROUT_DELAYUS = 500
; 2: Dim i As Byte 'declare a variable
;       The address of 'i' is 0x1C
	i EQU 0x1C
; 3:  'WaitMs 1000 'this delay should be used in a real device
; 4: 
; 5: For i = 10 To 5 Step -1 'for-next loop
	MOVLW 0x0A
	MOVWF 0x1C
L0003:
	MOVLW 0x05
	SUBWF 0x1C,W
	BTFSS STATUS,C
	GOTO L0004
; 6: Serout PORTB.1, 9600, "Number: ", #i, CrLf 'send formatted output to PORTB.1 (TX line of software UART)
	BSF STATUS,RP0
	BCF TRISB,1
	BCF STATUS,RP0
	BSF PORTB,1
	MOVLW 0x06
	MOVWF SO_PORT
	MOVLW 0x02
	MOVWF SO_BIT
	MOVLW 0x5B
	MOVWF SO_INTL
	MOVLW 0x00
	MOVWF SO_INTH
	MOVLW 0x4E
	CALL SO01
	MOVLW 0x75
	CALL SO01
	MOVLW 0x6D
	CALL SO01
	MOVLW 0x62
	CALL SO01
	MOVLW 0x65
	CALL SO01
	MOVLW 0x72
	CALL SO01
	MOVLW 0x3A
	CALL SO01
	MOVLW 0x20
	CALL SO01
	MOVF 0x1C,W
	MOVWF R2L
	CLRF R2H
	CALL SO21
	MOVLW 0x0D
	CALL SO01
	MOVLW 0x0A
	CALL SO01
; 7:  'WaitMs 500 'this delay should be used in a real device
; 8: Next i
	MOVLW 0x01
	SUBWF 0x1C,F
	BTFSC STATUS,C
	GOTO L0003
L0004:	MOVLW 0x1F
	ANDWF STATUS,F
; 9: 
; 10: loop: 
L0001:
; 11: Serin PORTB.2, 9600, i 'wait to receive a byte on PORTB.2 (RX line of software UART)
	BSF STATUS,RP0
	BSF TRISB,2
	BCF STATUS,RP0
	MOVLW 0x06
	MOVWF SO_PORT
	MOVLW 0x04
	MOVWF SO_BIT
	MOVLW 0x5B
	MOVWF SO_INTL
	MOVLW 0x00
	MOVWF SO_INTH
	CALL SI01
	MOVWF 0x1C
; 12: Serout PORTB.1, 9600, "Number: ", #i, CrLf 'send formatted output to serial port
	BSF STATUS,RP0
	BCF TRISB,1
	BCF STATUS,RP0
	BSF PORTB,1
	MOVLW 0x06
	MOVWF SO_PORT
	MOVLW 0x02
	MOVWF SO_BIT
	MOVLW 0x5B
	MOVWF SO_INTL
	MOVLW 0x00
	MOVWF SO_INTH
	MOVLW 0x4E
	CALL SO01
	MOVLW 0x75
	CALL SO01
	MOVLW 0x6D
	CALL SO01
	MOVLW 0x62
	CALL SO01
	MOVLW 0x65
	CALL SO01
	MOVLW 0x72
	CALL SO01
	MOVLW 0x3A
	CALL SO01
	MOVLW 0x20
	CALL SO01
	MOVF 0x1C,W
	MOVWF R2L
	CLRF R2H
	CALL SO21
	MOVLW 0x0D
	CALL SO01
	MOVLW 0x0A
	CALL SO01
; 13: Goto loop 'loop forever
	GOTO L0001
; End of program
L0005:	GOTO L0005
; Division Routine
D001:	MOVLW 0x10
	MOVWF R3L
	CLRF R2H
	CLRF R2L
D002:	RLF R0H,W
	RLF R2L,F
	RLF R2H,F
	MOVF R1L,W
	SUBWF R2L,F
	MOVF R1H,W
	BTFSS STATUS,C
	INCFSZ R1H,W
	SUBWF R2H,F
	BTFSC STATUS,C
	GOTO D003
	MOVF R1L,W
	ADDWF R2L,F
	MOVF R1H,W
	BTFSC STATUS,C
	INCFSZ R1H,W
	ADDWF R2H,F
	BCF STATUS,C
D003:	RLF R0L,F
	RLF R0H,F
	DECFSZ R3L,F
	GOTO D002
	MOVF R0L,W
	RETURN
; Waitus Routine - Word Argument
Y001:	MOVLW 0x10
	SUBWF R4L,F
	CLRW
	BTFSS STATUS,C
	ADDLW 0x01
	SUBWF R4H,F
	BTFSS STATUS,C
	RETURN
	GOTO Y002
Y002:	MOVLW 0x0A
	SUBWF R4L,F
	CLRW
	BTFSS STATUS,C
	ADDLW 0x01
	SUBWF R4H,F
	BTFSS STATUS,C
	RETURN
	GOTO Y002
; Serout Routine
SO01:	MOVWF R5L
	MOVLW 0xF4
	MOVWF R4L
	MOVLW 0x01
	MOVWF R4H
	CALL Y001
	MOVF SO_PORT,W
	MOVWF FSR
	MOVLW 0x09
	MOVWF R5H
	BCF STATUS,C
SO02:	CALL SO03
	RRF R5L,F
	DECFSZ R5H,F
	GOTO SO02
	BSF STATUS,C
	CALL SO03
	RETURN
SO03:	MOVF INDF,W
	IORWF SO_BIT,W
	BTFSS STATUS,C
	XORWF SO_BIT,W
	MOVWF INDF
	MOVF SO_INTL,W
	MOVWF R4L
	MOVF SO_INTH,W
	MOVWF R4H
	CALL Y001
	RETURN
; Serout Decimal Conversion Routine
SO21:	BSF R3H,7
	MOVLW 0x27
	MOVWF R1H
	MOVLW 0x10
	CALL SO22
	MOVLW 0x03
	MOVWF R1H
	MOVLW 0xE8
	CALL SO22
	CLRF R1H
	MOVLW 0x64
	CALL SO22
	CLRF R1H
	MOVLW 0x0A
	CALL SO22
	MOVF R2L,W
	GOTO SO23
SO22:	MOVWF R1L
	MOVF R2H,W
	MOVWF R0H
	MOVF R2L,W
	MOVWF R0L
	CALL D001
	MOVF R0L,W
	BTFSS STATUS,Z
	BCF R3H,7
	BTFSC R3H,7
	RETURN
SO23:	ADDLW 0x30
	CALL SO01
	RETURN
; Serin Routine
SI01:	CALL SI03
	BTFSC STATUS,C
	GOTO SI01
	MOVF SO_INTL,W
	MOVWF R4L
	MOVF SO_INTH,W
	MOVWF R4H
	RRF R4H,F
	RRF R4L,F
	BCF STATUS,C
	RRF R4H,F
	RRF R4L,F
	CALL Y001
	MOVLW 0x08
	MOVWF R5H
SI02:	MOVF SO_INTL,W
	MOVWF R4L
	MOVF SO_INTH,W
	MOVWF R4H
	CALL Y001
	CALL SI03
	RRF R5L,F
	DECFSZ R5H,F
	GOTO SI02
	MOVF SO_INTL,W
	MOVWF R4L
	MOVF SO_INTH,W
	MOVWF R4H
	CALL Y001
	MOVF R5L,W
	RETURN
SI03:	MOVF SO_PORT,W
	MOVWF FSR
	MOVF SO_BIT,W
	ANDWF INDF,W
	ADDLW 0xFF
	RETURN
; End of listing
	END
